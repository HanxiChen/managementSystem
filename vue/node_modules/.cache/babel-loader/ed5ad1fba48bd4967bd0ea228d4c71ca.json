{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport store from '../store';\nVue.use(VueRouter);\nconst routes = [{\n  path: '/login',\n  name: 'Login',\n  component: () => import('../views/Login.vue')\n}, {\n  path: '/register',\n  name: 'Register',\n  component: () => import('../views/Register.vue')\n}, {\n  path: '/404',\n  name: '404',\n  component: () => import('../views/404.vue')\n}];\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n}); // 重置路由\n\nexport const resetRouter = () => {\n  router.macher = new VueRouter({\n    mode: 'history',\n    base: process.env.BASE_URL,\n    routes\n  });\n};\nexport const setRoutes = () => {\n  const storeMenus = localStorage.getItem(\"menus\");\n\n  if (storeMenus) {\n    // 获取当前的路由对象名称数组\n    const currentRouteNames = router.getRoutes().map(v => v.name);\n\n    if (!currentRouteNames.includes('Manage')) {\n      // 拼装动态路由\n      const manageRoute = {\n        path: '/',\n        name: 'Manage',\n        component: () => import('../views/Manage.vue'),\n        redirect: \"/home\",\n        children: [{\n          path: 'person',\n          name: '个人信息',\n          component: () => import('../views/Person.vue')\n        } // { path: 'password', name: '修改密码', component: () => import('../views/Password.vue')}\n        ]\n      };\n      const menus = JSON.parse(storeMenus);\n      menus.forEach(item => {\n        if (item.path) {\n          // 当且仅当path不为空的时候才去设置路由\n          let itemMenu = {\n            path: item.path.replace(\"/\", \"\"),\n            name: item.name,\n            component: () => import('../views/' + item.pagePath + '.vue')\n          };\n          manageRoute.children.push(itemMenu);\n        } else if (item.children.length) {\n          item.children.forEach(item => {\n            if (item.path) {\n              let itemMenu = {\n                path: item.path.replace(\"/\", \"\"),\n                name: item.name,\n                component: () => import('../views/' + item.pagePath + '.vue')\n              };\n              manageRoute.children.push(itemMenu);\n            }\n          });\n        }\n      }); // 动态添加到现在的路由对象中\n\n      router.addRoute(manageRoute);\n    }\n  }\n}; // 重置就set一次路由\n\nsetRoutes(); //路由守卫\n\nrouter.beforeEach((to, from, next) => {\n  localStorage.setItem(\"currentPathName\", to.name); //设置当前的路由名称,为了在Header组件中使用\n\n  store.commit(\"setPath\"); //触发shore的数据更新\n  // 未找到路由的情况\n\n  if (!to.matched.length) {\n    const storeMenus = localStorage.getItem(\"menus\");\n\n    if (storeMenus) {\n      next(\"/404\");\n    } else {\n      // 跳回登录页面\n      next(\"/login\");\n    }\n  } // 有路由放行\n\n\n  next();\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","store","use","routes","path","name","component","router","mode","base","process","env","BASE_URL","resetRouter","macher","setRoutes","storeMenus","localStorage","getItem","currentRouteNames","getRoutes","map","v","includes","manageRoute","redirect","children","menus","JSON","parse","forEach","item","itemMenu","replace","pagePath","push","length","addRoute","beforeEach","to","from","next","setItem","commit","matched"],"sources":["E:/Project/SpringBoot/managementSystem/springboot/vue/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport store from '../store'\n\nVue.use(VueRouter)\n\nconst routes = [\n  {\n    path: '/login',\n    name: 'Login',\n    component: () => import('../views/Login.vue')\n  },\n  {\n    path: '/register',\n    name: 'Register',\n    component: () => import('../views/Register.vue')\n  },\n  {\n    path: '/404',\n    name: '404',\n    component: () => import('../views/404.vue')\n  }\n]\n\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n})\n\n// 重置路由\nexport const resetRouter = () => {\n  router.macher = new VueRouter({\n    mode: 'history',\n    base: process.env.BASE_URL,\n    routes\n  })\n}\nexport const setRoutes = () => {\n  const storeMenus = localStorage.getItem(\"menus\");\n  if (storeMenus) {\n    // 获取当前的路由对象名称数组\n    const currentRouteNames = router.getRoutes().map(v => v.name)\n    if (!currentRouteNames.includes('Manage')) {\n      // 拼装动态路由\n      const manageRoute = { path: '/', name: 'Manage', component: () => import('../views/Manage.vue'), redirect: \"/home\", children: [\n          { path: 'person', name: '个人信息', component: () => import('../views/Person.vue')},\n          // { path: 'password', name: '修改密码', component: () => import('../views/Password.vue')}\n        ]}\n      const menus = JSON.parse(storeMenus)\n      menus.forEach(item => {\n        if (item.path) {    // 当且仅当path不为空的时候才去设置路由\n          let itemMenu = {path: item.path.replace(\"/\", \"\"), name: item.name, component: () => import('../views/' + item.pagePath + '.vue')}\n          manageRoute.children.push(itemMenu)\n        } else if (item.children.length) {\n          item.children.forEach(item => {\n            if (item.path) {\n              let itemMenu = {path: item.path.replace(\"/\", \"\"), name: item.name, component: () => import('../views/' + item.pagePath + '.vue')}\n              manageRoute.children.push(itemMenu)\n            }\n          })\n        }\n      })\n      // 动态添加到现在的路由对象中\n      router.addRoute(manageRoute)\n    }\n  }\n}\n\n// 重置就set一次路由\nsetRoutes()\n\n//路由守卫\nrouter.beforeEach((to, from, next) => {\n  localStorage.setItem(\"currentPathName\", to.name)  //设置当前的路由名称,为了在Header组件中使用\n  store.commit(\"setPath\") //触发shore的数据更新\n\n  // 未找到路由的情况\n  if (!to.matched.length) {\n    const storeMenus = localStorage.getItem(\"menus\")\n    if (storeMenus) {\n      next(\"/404\")\n    } else {\n      // 跳回登录页面\n      next(\"/login\")\n    }\n  }\n\n  // 有路由放行\n  next()\n})\nexport default router\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}